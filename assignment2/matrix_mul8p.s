.set noreorder # No reordering of instructions by the assembler
.set noat
.globl start # Defining the entry point of the program


.text
.org 0x80020000
	# Entry point of the program
	start:

	# Algorithm's block size
	la $k1, B
	lw $k1, 0($k1)

	# Load n into t0
	la $t0, N
	lw $t0, 0($t0)

	# Load the addresses of the 2 arrays X and Y, into s0 and s1 respectively
	la $s0, arrX
	la $s1, arrY

	# Load the address of the result array Z into s2
	la $s2, arrZ


	# The following code (in C) is the famous Cache Blocking (Tiling) Algorithm used 
	# to multiply two matrices X and Y (of size NxN) and store the result in array Z.
	# block here is the Blocking Factor.
	# Source: https://suif.stanford.edu/papers/lam-asplos91.pdf
	#
	# for(int ii = 0; ii < N; ii+=block){
	#	for(int jj = 0; jj < N; jj+=block){
	#		for(int kk = 0; kk < N; kk+=block){
	#			for(int row = ii; row < ii+block; ++row){
	#				for(int column = jj; column < jj+block; ++column){
	#					for(int k = kk; k < kk+block; ++k)
	#						Z[row][column] = Z[row][column] + X[row][k] * Y[k][column];
	#				}	
	#			}
	#		}	
	#	}
	# }
	
LOOP1:	# for(int ii = 0; ii < N; ii+=block)
	slt $t9, $t1, $t0 
	beq $t9, $zero, EXIT
	
	addi $t2, $zero, 0  # t2 = jj = 0
LOOP2:	# for(int jj = 0; jj < N; jj+=block)
	slt $t9, $t2, $t0 
	beq $t9, $zero, EXIT_LOOP2
	
	addi $t3, $zero, 0  # t3 = kk = 0
LOOP3:	# for(int kk = 0; kk < N; kk+=block)
	slt $t9, $t3, $t0 
	beq $t9, $zero, EXIT_LOOP3

	addi $t4, $t1, 0	# t4 = row = ii
	add  $t7, $t1, $k1	# t7 = ii+block
LOOP4:	# for(int row = ii; row != ii+block; ++row)
	beq $t7, $t4, EXIT_LOOP4

	addi $t5, $t2, 0	# t5 = column = jj
	add  $t8, $t2, $k1	# t8 = jj+block
LOOP5:	# for(int column = jj; column < jj+block; ++column)
	beq $t8, $t5, EXIT_LOOP5
		
	addi $t6, $t3, 0	# t6 = k = kk
	add  $t9, $t3, $k1	# t9 = kk+block
LOOP6:	# for(int k = kk; k < kk+block; ++k)
	beq $t9, $t6, EXIT_LOOP6
	# Z[row][column] = Z[row][column] + X[row][k] * Y[k][column]

	# For loading an element of array: A[a][b] = A[(a*n + b)*4]. 
	# Where (a*n + b)*4 is the offset

	# For X[row][k]
	mul $s3, $t4, $t0	# s3 = row*n
	add $s3, $s3, $t6 	# s3 = row*n + k
	sll $s3, $s3, 2	# s3 = (row*n + k)*4
	add $s3, $s0, $s3	# s3 = address-of-X + s3
	lw  $s3, 0($s3)	# s3 = X[row][k]
	
	# Y[k][column]
	mul $s4, $t6, $t0	# s4 = k*n
	add $s4, $s4, $t5 	# s4 = k*n + column
	sll $s4, $s4, 2	# s4 = (k*n + column)*4
	add $s4, $s1, $s4	# s4 = address-of-Y + s4
	lw  $s4, 0($s4)	# s4 = Y[k][column]

	mult $s3, $s4	# (hi,lo) = X[row][k] * Y[k][column]

	# Multiplication overflow check
	mfhi $v1		    # v1 = hi
	mflo $s3		    # s3 = lo
	sra  $v0, $s3, 31	    # v0 = lo >> 31 (duplicate sign of lo throughout)
	bne  $v1, $v0, MUL_OVF  # If signs don't match, we have overflow

	# Z[row][column]
	mul $s5, $t4, $t0	# s5 = row*n
	add $s5, $s5, $t5 	# s5 = row*n + column
	sll $s5, $s5, 2	# s5 = (row*n + column)*4
	add $s5, $s2, $s5	# s5 = address-of-Z + s5
	lw  $s6, 0($s5)	# s6 = Z[row][column]

	add $s4, $s6, $s3   # s4 = Z[row][column] + X[row][k] * Y[k][column]

	# Addition overflow check
	srl $s6, $s6, 31	  # Get sign of Z[row][column] (first operand in sum)
	srl $s3, $s3, 31 	  # Get sign of X[row][k] * Y[k][column] (second operand in sum)
	bne $s6, $s3, NON_OVF # Adding two numbers with different signs, thus there cannot be overflow

	# By this point, both operands in the sum have the same sign. Additional check is needed
	srl $s6, $s4, 31       # Get sign of result
	bne $s6, $s3, ADD_OVF  # If the sign of the result is different than the one of the two numbers added, then we have ovf
	
NON_OVF:
	sw  $s4, 0($s5)	# Store result: Z[row][column] = Z[row][column] + X[row][k] * Y[k][column]

	addi $t6, $t6, 1
	j LOOP6

# End of LOOP1

EXIT_LOOP2:	
	add $t1, $t1, $k1
	j LOOP1
EXIT_LOOP3:	
	add $t2, $t2, $k1
	j LOOP2
EXIT_LOOP4:	
	add $t3, $t3, $k1
	j LOOP3
EXIT_LOOP5:	
	addi $t4, $t4, 1
	j LOOP4
EXIT_LOOP6:	
	addi $t5, $t5, 1
	j LOOP5
ADD_OVF:
	li $at, -1
	break
MUL_OVF:
	li $at, -2
	break
EXIT:
	break



# Data segment
.data
.org 0x2000
	# Change array size here starting from N = 8 up to 26 by a step of 2.
	N: .word 26
	# Change algorithm's block size (Blocking Factor) here, if needed. For
	# the above sizes the best B is B = N. Must, however, be a positive 
	# divisor of N, for the algorithm to work correctly
	B: .word 26
arrX: 
.word 39, 41, 17, -10, 41, 58, 50, 35, 60, -20, -27, 39, 54, 46, 51, 9, 38, 13, -49, 35, 37, 5, 24, -30, 43, 13
.word -27, 20, 14, 52, 33, 28, 48, 62, 1, 60, 62, 62, -42, 43, -15, 28, -44, 59, 50, -60, -44, -27, 2, 62, 59, 42
.word 59, 17, -5, -60, -53, 62, 9, 28, 40, 15, 49, 49, 5, -55, 41, 58, 10, -11, 8, 36, 31, -30, 28, 36, 20, 26
.word 30, 57, -59, -36, 17, -9, -42, 44, -27, 47, 51, -35, 8, -21, 59, 34, 58, 61, 11, -26, 63, 56, -56, 27, 53, -14
.word 24, -56, 57, -61, 60, 14, 58, 44, 44, 33, 42, 21, -62, 53, -59, 28, -54, 51, -34, 36, 15, 21, 61, 14, -8, 20
.word 10, -20, 26, 60, -14, -40, 44, 51, 12, 45, 9, 37, 4, 47, -35, 63, -45, 54, 30, -28, -10, 48, 32, -5, 59, -7
.word -52, 11, 32, 6, 62, -49, 25, 51, -25, 35, 20, -25, 55, 32, -16, 54, 20, -62, -60, 56, 9, 38, 16, 26, 42, 12
.word 17, -51, 4, -58, 59, -25, 50, 4, -27, 41, 37, 8, 41, 30, 32, 18, 16, -58, 24, -40, 38, -36, -25, 7, -37, 26
.word 63, 0, 4, 60, 9, 23, 19, -45, 6, 0, -23, 5, -12, 38, -60, 60, -34, 36, 26, 11, 47, 60, 52, 47, 63, 39
.word -19, 7, 56, -17, 45, 47, -9, 54, 53, -7, 36, -39, 45, -18, 5, -2, 37, 56, 55, 17, 22, 52, 21, 2, 44, -46
.word 13, 40, 44, 38, -52, 10, 50, 55, -11, 15, 9, 0, 46, 40, 12, 42, 45, 19, 12, -11, 34, -26, 24, -62, 25, 5
.word 17, 1, 9, 25, 1, 47, 21, 7, 60, 34, -41, 50, 13, 37, 62, 9, 49, 14, 53, 15, 42, 36, 1, 33, 62, 27
.word 63, -41, 62, 50, -57, 12, 7, -36, -2, 50, 50, 44, 1, -48, 16, 39, -25, 27, 31, -20, 10, 3, 60, 13, 27, 43
.word -21, 1, 37, 22, 61, 5, 14, 46, 47, 6, 35, 10, 48, -30, 22, 26, 33, 1, -13, 61, 22, -33, 35, 18, -18, 11
.word 33, 21, 44, 29, 60, 45, 19, -37, 7, 43, 36, -1, 28, 26, 43, -36, 59, -30, 44, -42, -51, 6, 7, 38, 13, 43
.word -31, 58, 0, 42, 58, 56, 7, 30, -17, -27, 32, 10, 13, 53, -3, 13, 13, 29, 27, 56, -21, -12, 6, -15, 50, 28
.word 13, 58, -24, 53, 16, 61, 9, 42, 34, 59, 19, 20, 49, 50, 14, 54, 53, 54, 33, 40, 46, 15, 0, 28, 28, -25
.word 30, 10, -17, 51, 10, -59, 26, 13, 28, 45, -27, 2, 53, 61, 54, -2, -4, 36, 8, 53, 0, 18, -33, 22, 22, 8
.word 63, 13, 40, 7, 33, 51, 21, 59, -46, 47, 32, 9, -34, -63, 35, 41, 17, 24, 1, 24, 40, 8, -34, -26, 52, 62
.word -11, 22, 40, 37, 28, 46, 5, 39, 37, 41, 10, -10, -53, 60, 46, 63, 2, 39, -43, 54, -27, 53, -43, -39, -27, 30
.word -2, 17, 13, 33, -7, 52, 54, 52, 40, 40, 15, 36, -57, -10, -28, 57, 17, 22, 23, 25, 24, 41, 41, 47, 8, 20
.word 53, 17, 5, 3, -4, 0, 7, 51, -13, 61, 25, 51, 4, -19, -58, 35, -33, 29, -15, 7, 29, -40, 29, 2, -39, 16
.word -38, 3, 38, -54, 63, -15, 13, 6, 13, 48, 21, 14, 52, -29, 17, 29, -50, -34, -55, 57, -50, 22, -53, 28, 42, 45
.word -38, 49, 13, 54, 61, 21, 52, 7, -16, 34, -9, 1, 21, 1, 43, 62, 43, -43, 62, 22, 53, 42, 35, 21, 50, 53
.word 47, -58, 20, 3, 42, 16, -49, 13, 30, 43, 15, 61, 7, 37, 9, -53, 16, 61, -43, 36, 2, 43, -49, 34, 28, 34
.word 35, 29, 49, 36, 28, -51, -9, -17, 48, 10, 43, -37, -45, 43, 21, -52, 45, 35, 19, 25, -33, 28, 60, -31, 35, 31


arrY: 
.word -30, -42, 12, 21, 35, -26, 27, 46, 5, 30, 19, 17, 40, 60, 26, 26, -31, -5, 26, 14, -36, -13, 38, 47, 3, 17
.word 8, -38, 20, 59, 61, -39, -26, -8, 7, 49, 63, 43, 57, -16, 40, -19, 4, -32, 27, -7, 49, 52, 27, 63, -19, 13
.word 46, 55, 19, 36, 41, 43, 48, 6, 39, -35, 59, 35, 20, -56, 18, -58, 63, 39, 57, 14, 2, 16, 5, -61, -35, 4
.word 56, -53, 9, 52, 51, 27, 33, 5, 14, -61, 12, 3, -35, 61, 33, 36, 40, 37, 7, 12, 9, 45, 42, -4, 5, 8
.word 14, 35, -12, 55, -34, 6, 53, -60, -5, 55, -48, 56, 22, 18, 62, 44, 38, 62, 48, 31, 18, 28, -16, 4, 33, 36
.word 31, 43, 26, -16, -23, 37, -12, -47, 26, -14, 51, -51, 3, -26, 50, 53, -27, 6, 29, -14, 19, 50, 23, 27, 48, 29
.word 19, 39, 8, 58, 0, 12, 15, -17, 41, -33, 18, 27, 52, -27, 31, 8, 10, 9, -49, 13, 51, 12, 45, 47, -60, 19
.word 35, -57, -37, -60, -13, 55, 52, 42, 5, -22, 17, 59, 0, -21, -59, 11, -22, 55, 25, 0, 56, -62, -56, 17, 31, 54
.word 9, 47, -28, -6, 44, 55, 22, 62, 33, 21, 54, 5, 59, 44, 61, 12, 19, -16, 0, -8, 40, 47, 45, 45, 44, 40
.word 22, 17, 4, 44, -31, 8, 52, -34, 47, 32, -41, 21, 62, 37, 5, 13, 58, 44, 27, 0, -17, 44, 33, 57, 57, 40
.word 42, -57, 0, 18, 43, 32, 61, -36, -38, 18, 45, 61, 14, 31, -16, 42, -6, 34, 2, 12, -20, 20, -57, 42, 29, 23
.word -60, 24, -10, 17, 0, 21, -32, 12, -45, 16, -5, 19, 29, 30, 59, 4, -9, 1, 20, -46, -14, 26, 60, 17, 63, -42
.word 6, 3, 60, 29, 22, 46, 61, 50, 1, -38, 37, 62, 40, 10, -49, 44, 50, 26, 16, 37, 24, 5, 2, -39, 24, 20
.word 15, 30, -34, 30, 29, 10, -57, 62, 27, 47, -55, 8, -44, -61, 62, 2, -36, 4, 9, 25, 45, 53, 7, 48, 23, 21
.word 20, -7, 13, 4, 22, 24, -39, 0, 63, -22, 60, 18, 63, 37, 34, 36, 24, 54, 48, 49, 1, -1, 38, 24, 27, -17
.word 57, -27, 38, -14, 59, 62, -30, 57, 46, 21, 51, 23, 25, -62, 29, 12, -51, 15, 41, -33, 16, 56, 19, 61, 27, 49
.word -41, 40, 56, 55, 54, 44, -43, -2, 26, 57, 2, 25, 34, 22, 40, 11, 16, -20, 26, -29, 15, 57, 6, -15, -30, -10
.word 57, 53, 57, 24, 19, 52, -23, 43, -20, 1, 18, -29, -53, 56, 52, 51, -38, -8, -51, 2, 4, 41, -62, 12, 29, 53
.word 7, -8, -63, -15, 3, 33, 42, 10, -10, 36, 2, -41, 34, 19, -2, 46, 27, 5, -55, 15, -22, -36, 26, 30, 58, -51
.word 15, 61, -18, 48, 24, -30, -21, -15, 56, 7, 14, 15, 26, -14, 47, 17, 30, 48, 30, 6, 0, 42, 8, 34, 23, 16
.word 20, 15, 13, -3, -30, 59, -34, -46, -13, 54, 24, 34, -26, 34, 45, 24, 17, 48, 4, 27, 7, 31, 2, 41, -1, 28
.word 1, 59, 3, 13, 15, -51, 12, -63, 23, 51, 48, 8, 32, 2, 17, 59, 30, 46, 19, 18, 33, 3, 41, -62, 28, -30
.word 3, 63, 24, 5, -33, 60, 55, 32, 37, 45, -56, 52, 50, 33, -35, 26, 38, 10, 28, 40, -15, 60, -14, 17, 15, -58
.word 46, -41, 32, 46, -11, 41, 34, 48, -2, 59, 60, 24, 20, 61, 39, 43, 37, 53, 32, 8, 44, 28, -37, -13, -36, -58
.word 0, -42, -60, 55, 31, 57, 56, -10, 18, 3, 5, 12, 44, -18, -34, 49, 31, 54, 3, 62, 16, -40, 38, -32, 5, 54
.word 3, 53, 28, 63, -20, 32, 12, 14, -3, -50, 4, 28, 13, 34, -32, 29, 26, 18, 25, 52, -2, 32, 42, 30, -59, 2

.org 0x100000

arrZ: 
.word 43, -41, 27, -10, 35, 31, 57, 52, -4, 0, 61, 21, 15, 21, 3, 9, 54, 38, 61, -13, 24, 30, 31, 37, 58, 41
.word 6, 31, -49, 32, 12, 35, 28, 19, 59, 58, -14, 37, 42, 16, 48, 28, 56, 12, 48, -30, 23, 62, 12, 13, -50, -26
.word -32, 45, 10, 48, -55, 49, 8, -24, 42, 52, 57, 53, 3, 12, 10, 54, -38, 54, 33, -43, -50, 7, -26, -50, 23, -6
.word 24, -21, 61, -18, -7, 51, 44, 31, 15, 38, 39, 60, 14, 5, 21, 53, 6, -9, 43, 12, 36, -32, 40, 30, 10, 56
.word -51, 50, 35, -38, 3, 37, 37, -13, 10, 2, 24, -63, 34, -55, -34, 29, 36, 22, -7, 63, 23, -19, 20, 12, 58, 13
.word -50, -19, 41, -1, 59, 33, -46, 39, 52, -63, 11, 8, 51, 62, 36, 1, -23, -42, 31, 12, 10, -58, 38, 45, -7, 38
.word 62, 50, -4, -32, 59, 62, -53, 19, 20, 47, 13, 22, 10, 14, -47, 37, 35, 31, 8, 15, 32, 22, 54, 43, 8, 40
.word 4, 9, 1, -32, 12, 29, 29, 23, 60, 40, 52, 51, 39, -52, -56, -6, 26, 11, 39, 11, -49, 34, 37, 51, 32, -63
.word 26, 62, 16, -49, 14, -5, -7, 3, 59, -33, 54, -58, 61, 62, 9, 49, 47, 36, 33, 7, -13, -23, 28, -2, 40, 4
.word 39, -58, -44, 1, 53, -24, 33, 35, 19, -49, -55, -53, 34, 44, -27, 40, 47, -38, 27, 17, 25, 53, 39, 60, 4, 26
.word 53, 15, 7, 33, 44, 36, 44, -55, 49, 25, 51, 4, -39, 20, 45, 39, 62, 57, 50, 39, 35, -57, 21, 24, 58, 16
.word -63, 7, 20, 18, 9, 35, -48, 12, 54, 0, 62, 41, 42, -25, 50, 17, -61, 25, 51, 18, 37, 4, 17, 55, 4, 33
.word 48, 22, -12, 63, 25, 48, 41, 40, 53, 26, 48, 47, 47, -9, 29, 55, 53, 40, -61, 63, -57, 46, 57, 63, 17, 8
.word 56, 4, 29, 27, 56, 8, -32, 46, 24, 52, 29, 52, 57, 5, 13, 12, -5, 44, -30, 29, 26, 3, 22, 24, -30, 0
.word -47, -19, -39, -50, 38, -57, 15, 15, -46, -3, 18, -3, 55, 22, 39, 18, 10, 62, 61, -38, -48, 16, 6, -45, -11, 60
.word 55, 5, -26, 4, 50, 24, 59, 47, 8, -29, 53, 55, -12, 47, -21, -53, 43, 58, 22, 8, -21, 6, 55, 10, 10, -55
.word 20, -59, 19, -55, -23, 52, 39, 8, -46, 6, -49, -20, 1, -40, 5, 12, 14, 57, 50, 10, 29, -12, -46, -2, -37, 31
.word -21, 62, 18, -34, 6, -49, 54, -54, 28, 50, 0, 62, -18, 10, 8, 13, -29, -52, 50, -8, 5, 13, 36, -35, 4, -58
.word -19, 50, -56, -29, 38, 30, 55, 51, 40, 34, 53, 40, -50, 26, -33, 59, 12, -27, -42, -4, 35, 20, 52, 4, 3, -10
.word 21, 17, 63, -62, 63, 21, -40, 15, -41, -35, 54, 39, 62, 8, 17, 57, 5, -45, -54, 37, 38, 1, 43, -32, 37, 32
.word 58, 6, 50, 58, -33, 41, 63, 43, -3, 43, 10, 55, 62, 9, 27, 62, 49, -14, 19, -39, 61, -27, 40, 49, 22, -20
.word 10, -22, 34, 43, 9, 19, 46, 31, 42, 54, 23, 35, 23, 42, 50, -14, -9, -4, 3, 41, -24, 8, 30, -9, 45, 48
.word 17, -4, 40, 22, -45, 22, 8, 35, -9, 24, -9, 41, 7, 47, 49, 58, 51, 43, 45, 54, -37, 18, 39, -56, 1, 18
.word 49, 49, 45, 46, 0, 33, -38, -15, 13, 47, 17, -31, -54, 41, 41, 2, 55, -19, 20, 3, 41, -8, 49, 36, 28, 49
.word 20, 38, 41, 1, 11, 44, -55, 38, 1, 32, 15, -59, 0, 63, 50, 11, 2, 16, 1, -61, 21, -14, -41, 23, -30, 22
.word 33, 46, 48, 62, 30, -40, -59, -11, -9, 8, 50, 42, 10, 6, -58, 22, -45, 60, 50, -63, 4, 49, -31, 59, 5, 7